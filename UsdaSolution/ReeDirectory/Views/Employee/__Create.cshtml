@model ReeDirectoryEntityFm.Entities.Employee.EEmployee

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EEmployee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <select id="countryId"></select>
        <select id="statesId"></select>
        <input type="text" class="datepicker" />


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">
        $(function () {
            $.getJSON("../Home/Countries/List", null, function (data) {
                var options = "<option>Please Select</option>";
                $.each(data, function (i, country) {
                    options += "<option value='" + country.Value + "'>" + country.Text + "</option>";
                });
                $("#countryId").html(options);
            });
            $("#countryId").change(function () {
                $.getJSON("../Home/states/List/" + $("option:selected", this).attr("value"), function (data) {
                    var options = "<option>please Select</option>";
                    $.each(data, function (i, state) {
                        options += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                    });
                    $("#statesId").html(options);
                });
            });
            $("#statesId").click(function () {
                $("<div></div>").dialog({
                    height: 40,                   
                    modal: true,
                    open: function () {
                        $(this).load("../Home/Countries/List");
                    },                    
                    buttons:
                        {
                            "close": function () {
                                $(this).dialog("close");
                            },
                            "save": function () {
                                $(this).closest("form").submit();
                            }
                        }
                });
            });

            $(".datepicker").datepicker({
                showOn: 'both',
                buttonImage: 'ui-icon-calculator',

            });
        });
    </script>
}
